{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sheik\\\\OneDrive\\\\Desktop\\\\Music Search\\\\song-search\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [songs, setSongs] = useState([]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (query === '') return;\n    try {\n      const response = await axios.get(`https://api.deezer.com/search`, {\n        params: {\n          q: query\n        }\n      });\n      setSongs(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching data from Deezer API\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Deezer Song Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Type a word to search for songs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.length > 0 ? songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [song.title, \" by \", song.artist.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.album.cover_medium,\n          alt: song.album.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: song.preview,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), \"Your browser does not support the audio element.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No songs found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ssM50z2MPeWDC2cQgdVYYMwnPEk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","query","setQuery","songs","setSongs","handleSearch","e","preventDefault","response","get","params","q","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","length","map","song","title","artist","name","src","album","cover_medium","alt","controls","preview","id","_c","$RefreshReg$"],"sources":["C:/Users/sheik/OneDrive/Desktop/Music Search/song-search/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [songs, setSongs] = useState([]);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (query === '') return;\n    \n    try {\n      const response = await axios.get(`https://api.deezer.com/search`, {\n        params: { q: query },\n      });\n      setSongs(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching data from Deezer API\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Deezer Song Search</h1>\n      <form onSubmit={handleSearch}>\n        <input \n          type=\"text\" \n          value={query} \n          onChange={(e) => setQuery(e.target.value)} \n          placeholder=\"Type a word to search for songs...\" \n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <div className=\"song-list\">\n        {songs.length > 0 ? (\n          songs.map((song) => (\n            <div key={song.id} className=\"song\">\n              <p>{song.title} by {song.artist.name}</p>\n              <img src={song.album.cover_medium} alt={song.album.title} />\n              <audio controls>\n                <source src={song.preview} type=\"audio/mpeg\" />\n                Your browser does not support the audio element.\n              </audio>\n            </div>\n          ))\n        ) : (\n          <p>No songs found</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}