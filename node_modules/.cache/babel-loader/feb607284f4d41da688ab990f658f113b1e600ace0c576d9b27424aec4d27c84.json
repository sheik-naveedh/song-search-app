{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sheik\\\\OneDrive\\\\Desktop\\\\Music Search\\\\song-search\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'YOUR_LASTFM_API_KEY'; // Replace with your Last.fm API Key\nconst API_URL = 'http://ws.audioscrobbler.com/2.0/';\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [songs, setSongs] = useState([]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (query === '') return;\n    try {\n      const response = await axios.get(API_URL, {\n        params: {\n          method: 'track.search',\n          track: query,\n          api_key: API_KEY,\n          format: 'json',\n          limit: 10\n        }\n      });\n      setSongs(response.data.results.trackmatches.track);\n    } catch (error) {\n      console.error('Error fetching data from Last.fm API', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Last.fm Song Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Type a song title...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.length > 0 ? songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [song.name, \" by \", song.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: song.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Listen on Last.fm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, song.mbid || song.url, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No songs found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ssM50z2MPeWDC2cQgdVYYMwnPEk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_KEY","API_URL","App","_s","query","setQuery","songs","setSongs","handleSearch","e","preventDefault","response","get","params","method","track","api_key","format","limit","data","results","trackmatches","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","length","map","song","name","artist","href","url","rel","mbid","_c","$RefreshReg$"],"sources":["C:/Users/sheik/OneDrive/Desktop/Music Search/song-search/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst API_KEY = 'YOUR_LASTFM_API_KEY'; // Replace with your Last.fm API Key\nconst API_URL = 'http://ws.audioscrobbler.com/2.0/';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [songs, setSongs] = useState([]);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (query === '') return;\n\n    try {\n      const response = await axios.get(API_URL, {\n        params: {\n          method: 'track.search',\n          track: query,\n          api_key: API_KEY,\n          format: 'json',\n          limit: 10,\n        },\n      });\n      setSongs(response.data.results.trackmatches.track);\n    } catch (error) {\n      console.error('Error fetching data from Last.fm API', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Last.fm Song Search</h1>\n      <form onSubmit={handleSearch}>\n        <input \n          type=\"text\" \n          value={query} \n          onChange={(e) => setQuery(e.target.value)} \n          placeholder=\"Type a song title...\" \n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <div className=\"song-list\">\n        {songs.length > 0 ? (\n          songs.map((song) => (\n            <div key={song.mbid || song.url} className=\"song\">\n              <p>{song.name} by {song.artist}</p>\n              <a href={song.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                Listen on Last.fm\n              </a>\n            </div>\n          ))\n        ) : (\n          <p>No songs found</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}